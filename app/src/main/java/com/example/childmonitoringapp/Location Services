package com.org.childmonitorparent.child.services

import android.Manifest
import android.app.Service
import android.content.Intent
import android.content.pm.PackageManager
import android.location.Location
import android.os.IBinder
import android.os.Looper
import androidx.core.app.ActivityCompat
import com.google.android.gms.location.FusedLocationProviderClient
import com.google.android.gms.location.LocationCallback
import com.google.android.gms.location.LocationRequest
import com.google.android.gms.location.LocationResult
import com.google.android.gms.location.LocationServices
import com.google.android.gms.location.Priority
import com.google.firebase.Firebase
import com.google.firebase.firestore.firestore
import com.org.childmonitorparent.parent.models.LocationData
import com.org.childmonitorparent.utils.PrefsHelper

class LocationService : Service() {
    private lateinit var fusedLocationClient: FusedLocationProviderClient
    private val db = Firebase.firestore

    override fun onCreate() {
        super.onCreate()
        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)
    }

    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
        startLocationUpdates()
        return START_STICKY
    }

    private fun startLocationUpdates() {
        val locationRequest =
            LocationRequest.Builder(Priority.PRIORITY_HIGH_ACCURACY, 5000) // Every 5 sec
                .setMinUpdateIntervalMillis(2000) // Minimum update every 2 sec
                .build()

        if (ActivityCompat.checkSelfPermission(
                this,
                Manifest.permission.ACCESS_FINE_LOCATION
            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                this,
                Manifest.permission.ACCESS_COARSE_LOCATION
            ) != PackageManager.PERMISSION_GRANTED
        ) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return
        }
        fusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, Looper.getMainLooper())
    }

    private val locationCallback = object : LocationCallback() {
        override fun onLocationResult(locationResult: LocationResult) {
            for (location in locationResult.locations) {
                saveChildLocation(PrefsHelper.getData("userId"), location)
            }
        }
    }

    private fun saveChildLocation(childId: String, location: Location) {
        val locationData = LocationData(location.latitude, location.longitude, System.currentTimeMillis(), childId)
        db.collection("locations").document(childId)
            .set(locationData)
            .addOnSuccessListener { println("Location saved successfully!") }
            .addOnFailureListener { e -> println("Failed to save location: ${e.message}") }
    }

    override fun onBind(intent: Intent?): IBinder? {
        return null
    }
}
